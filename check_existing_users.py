#!/usr/bin/env python3
import sqlite3

def check_existing_users():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    try:
        conn = sqlite3.connect('driver.db')
        cursor = conn.cursor()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT id, telegram_id, first_name, last_name, login, role, auth_type FROM users ORDER BY id")
        users = cursor.fetchall()
        
        print("üìä –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for user in users:
            print(f"  ID: {user[0]}, Telegram: {user[1]}, –ò–º—è: {user[2]} {user[3]}, Login: '{user[4]}', –†–æ–ª—å: {user[5]}, Auth: {user[6]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ª–æ–≥–∏–Ω–æ–º
        cursor.execute("SELECT id, login, role FROM users WHERE login IS NOT NULL")
        users_with_login = cursor.fetchall()
        
        print(f"\nüìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ª–æ–≥–∏–Ω–æ–º ({len(users_with_login)}):")
        for user in users_with_login:
            print(f"  ID: {user[0]}, Login: '{user[1]}', –†–æ–ª—å: {user[2]}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_existing_users() 