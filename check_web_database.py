#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import sqlite3
import os
import sys

def check_web_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫–∞–∫ –≤ run_web.py
    current_dir = os.path.dirname(os.path.abspath(__file__))
    web_dir = os.path.join(current_dir, 'web')
    
    sys.path.insert(0, current_dir)
    sys.path.insert(0, web_dir)
    
    print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    print(f"üìÅ Web –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {web_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ –ë–î
    possible_paths = [
        "driver.db",
        "web/driver.db", 
        "bot/driver.db",
        "/root/clever-driver-bot/driver.db",
        "/root/clever-driver-bot/web/driver.db",
        "/root/clever-driver-bot/bot/driver.db"
    ]
    
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    for path in possible_paths:
        if os.path.exists(path):
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {path}")
            try:
                conn = sqlite3.connect(path)
                cursor = conn.cursor()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                cursor.execute('PRAGMA table_info(users)')
                columns = [col[1] for col in cursor.fetchall()]
                
                print(f"  üìã –ö–æ–ª–æ–Ω–∫–∏: {', '.join(columns)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                cursor.execute("SELECT id, login, email, role FROM users ORDER BY id")
                users = cursor.fetchall()
                
                print(f"  üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
                for user in users:
                    user_id, login, email, role = user
                    print(f"    ID: {user_id}, Login: {login}, Email: {email or '–ù–ï–¢'}, Role: {role}")
                
                conn.close()
                
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–î {path}: {e}")
        else:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    try:
        from config.settings import config
        print(f"üìã DATABASE_URL: {config.DATABASE_URL}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

def check_web_app_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫—É—é –ë–î –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from web.app import app
        from bot.database import Database
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ë–î
        db = Database()
        print(f"üóÑÔ∏è –ü—É—Ç—å –∫ –ë–î –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {db.db_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        users = db.get_all_users()
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ({len(users)}):")
        for user in users:
            user_id = user.get('id')
            login = user.get('login')
            email = user.get('email')
            role = user.get('role')
            print(f"  ID: {user_id}, Login: {login}, Email: {email or '–ù–ï–¢'}, Role: {role}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 60)
    
    check_web_database()
    check_web_app_database()
    
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 