#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ —Å –∫–æ–¥–æ–º 454162
"""

import requests
import json
import sys
import os
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('debug_454162.log', mode='w', encoding='utf-8')
    ]
)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import config

def test_telegram_api_detailed():
    """–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram API"""
    print("üîç –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram API")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
    print("üìù –í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É HTTP 400:")
    contact = input("–ö–æ–Ω—Ç–∞–∫—Ç: ").strip()
    
    if not contact:
        print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É–∫–∞–∑–∞–Ω")
        return
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {contact}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º chat_id
    if contact.startswith('@'):
        username = contact[1:]
        chat_id = f"@{username}"
        print(f"üìã Username: {username}")
        print(f"üìã Chat ID: {chat_id}")
    elif contact.startswith('+'):
        chat_id = contact
        print(f"üìã –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {contact}")
        print(f"üìã Chat ID: {chat_id}")
    else:
        chat_id = f"@{contact}"
        print(f"üìã Username (–±–µ–∑ @): {contact}")
        print(f"üìã Chat ID: {chat_id}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º getMe
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getMe...")
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/getMe"
    try:
        response = requests.get(url, timeout=10)
        print(f"üì° GET /getMe: HTTP {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data['result']
                print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info.get('username')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description')}")
                return
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º getChat (–µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
    if contact.startswith('+'):
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ getChat –¥–ª—è –Ω–æ–º–µ—Ä–∞ {contact}...")
        check_url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/getChat"
        check_params = {"chat_id": contact}
        
        try:
            check_response = requests.get(check_url, params=check_params, timeout=10)
            print(f"üì° GET /getChat: HTTP {check_response.status_code}")
            
            if check_response.status_code == 200:
                check_data = check_response.json()
                if check_data.get('ok'):
                    chat_info = check_data['result']
                    print(f"‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω: {chat_info.get('type')} - {chat_info.get('title', chat_info.get('first_name', 'Unknown'))}")
                    chat_id = chat_info['id']
                    print(f"üìã –ü–æ–ª—É—á–µ–Ω chat_id: {chat_id}")
                else:
                    error_desc = check_data.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                    print(f"‚ùå getChat –æ—à–∏–±–∫–∞: {error_desc}")
            else:
                print(f"‚ùå getChat HTTP –æ—à–∏–±–∫–∞: {check_response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ getChat: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º sendMessage —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sendMessage...")
    
    test_messages = [
        {
            'name': '–ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            'data': {
                'chat_id': chat_id,
                'text': '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
            }
        },
        {
            'name': '–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏',
            'data': {
                'chat_id': chat_id,
                'text': 'üîß –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
            }
        },
        {
            'name': '–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º',
            'data': {
                'chat_id': chat_id,
                'text': f'–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: 454162'
            }
        }
    ]
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/sendMessage"
    
    for i, test in enumerate(test_messages, 1):
        print(f"\nüì§ –¢–µ—Å—Ç {i}: {test['name']}")
        print(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(test['data'], ensure_ascii=False)}")
        
        try:
            response = requests.post(url, json=test['data'], timeout=10)
            print(f"üì° POST /sendMessage: HTTP {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                    message_id = result['result']['message_id']
                    print(f"üìã ID —Å–æ–æ–±—â–µ–Ω–∏—è: {message_id}")
                else:
                    error_msg = result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                    print(f"‚ùå API –æ—à–∏–±–∫–∞: {error_msg}")
            elif response.status_code == 400:
                print("‚ùå HTTP 400 - Bad Request")
                try:
                    error_data = response.json()
                    print(f"üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
                    
                    error_msg = error_data.get('description', '')
                    if "chat not found" in error_msg.lower():
                        print("\nüìã –†–µ—à–µ–Ω–∏–µ:")
                        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ Telegram")
                        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å username –∏–ª–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
                        print("3. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É /start")
                    elif "forbidden" in error_msg.lower():
                        print("\nüìã –†–µ—à–µ–Ω–∏–µ:")
                        print("1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
                        print("2. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞")
                        print("3. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É /start")
                    elif "chat_id is empty" in error_msg.lower():
                        print("\nüìã –†–µ—à–µ–Ω–∏–µ:")
                        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ç–∞–∫—Ç–∞")
                        print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ @username –∏–ª–∏ +7XXXXXXXXXX")
                        
                except:
                    print(f"üìã –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            else:
                print(f"‚ùå HTTP {response.status_code}")
                print(f"üìã –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def main():
    print("üöÄ –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ HTTP 400")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"ü§ñ –ë–æ—Ç: @{config.TELEGRAM_BOT_USERNAME}")
    print(f"üîë –¢–æ–∫–µ–Ω: {config.TELEGRAM_TOKEN[:10]}...")
    print(f"üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: debug_454162.log")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_telegram_api_detailed()
    
    print("\n" + "=" * 60)
    print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª debug_454162.log –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤")

if __name__ == "__main__":
    main() 