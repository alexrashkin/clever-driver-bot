#!/usr/bin/env python3
"""
–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –°–¢–ê–¢–£–°–ê –ê–í–¢–û–ú–û–ë–ò–õ–Ø
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
"""

import math

def calculate_distance(lat1, lon1, lat2, lon2):
    """–†–∞—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ –≥–∞–≤–µ—Ä—Å–∏–Ω—É—Å–∞"""
    R = 6371000  # –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –º–µ—Ç—Ä–∞—Ö
    
    lat1_rad = math.radians(lat1)
    lat2_rad = math.radians(lat2)
    delta_lat = math.radians(lat2 - lat1)
    delta_lon = math.radians(lon2 - lon1)
    
    a = (math.sin(delta_lat / 2) ** 2 + 
         math.cos(lat1_rad) * math.cos(lat2_rad) * 
         math.sin(delta_lon / 2) ** 2)
    
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))
    return R * c

def get_status(latitude, longitude):
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º"""
    WORK_LAT = 55.676803
    WORK_LON = 37.523510
    WORK_RADIUS = 100  # –º–µ—Ç—Ä–æ–≤
    
    distance = calculate_distance(latitude, longitude, WORK_LAT, WORK_LON)
    is_at_work = distance <= WORK_RADIUS
    
    return {
        'distance': round(distance, 1),
        'is_at_work': is_at_work,
        'status': 'üü¢ –í–û–î–ò–¢–ï–õ–¨ –û–ñ–ò–î–ê–ï–¢' if is_at_work else 'üü° –í –ü–£–¢–ò'
    }

def demo_status_examples():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –°–¢–ê–¢–£–°–ê")
    print("=" * 50)
    
    # –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    test_locations = [
        {
            'name': 'üè¢ –¢–æ—á–Ω–æ –≤ —Ü–µ–Ω—Ç—Ä–µ —Ä–∞–±–æ—á–µ–π –∑–æ–Ω—ã',
            'lat': 55.676803, 'lon': 37.523510,
            'expected': '–í–û–î–ò–¢–ï–õ–¨ –û–ñ–ò–î–ê–ï–¢'
        },
        {
            'name': 'üéØ –ù–∞ –≥—Ä–∞–Ω–∏—Ü–µ –∑–æ–Ω—ã (50–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞)',
            'lat': 55.677253, 'lon': 37.523960,
            'expected': '–í–û–î–ò–¢–ï–õ–¨ –û–ñ–ò–î–ê–ï–¢'
        },
        {
            'name': '‚ö†Ô∏è –ù–∞ —Å–∞–º–æ–π –≥—Ä–∞–Ω–∏—Ü–µ (100–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞)',
            'lat': 55.677703, 'lon': 37.523510,
            'expected': '–í–û–î–ò–¢–ï–õ–¨ –û–ñ–ò–î–ê–ï–¢ (–≥—Ä–∞–Ω–∏—Ü–∞)'
        },
        {
            'name': 'üöó –ß—É—Ç—å –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π (110–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞)',
            'lat': 55.677793, 'lon': 37.523510,
            'expected': '–í –ü–£–¢–ò'
        },
        {
            'name': 'üè† –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å (–¥–∞–ª–µ–∫–æ)',
            'lat': 55.7539, 'lon': 37.6208,
            'expected': '–í –ü–£–¢–ò'
        },
        {
            'name': 'üè¢ –ú–æ—Å–∫–≤–∞-–°–∏—Ç–∏ (–¥–∞–ª–µ–∫–æ)',
            'lat': 55.7504, 'lon': 37.5384,
            'expected': '–í –ü–£–¢–ò'
        }
    ]
    
    print("üìç –ü–†–ò–ú–ï–†–´ –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê:\n")
    
    for i, location in enumerate(test_locations, 1):
        result = get_status(location['lat'], location['lon'])
        
        print(f"{i}. {location['name']}")
        print(f"   üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {location['lat']:.6f}, {location['lon']:.6f}")
        print(f"   üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {result['distance']} –º")
        print(f"   üéØ –°—Ç–∞—Ç—É—Å: {result['status']}")
        print(f"   ‚úÖ –û–∂–∏–¥–∞–ª–æ—Å—å: {location['expected']}")
        print()

def explain_status_logic():
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–∞"""
    print("\nüßÆ –õ–û–ì–ò–ö–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê:")
    print("=" * 50)
    
    print("1Ô∏è‚É£ –ü–û–õ–£–ß–ï–ù–ò–ï –ö–û–û–†–î–ò–ù–ê–¢:")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–æ–±–∏–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É")
    print("   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—É–ø–∞—é—Ç —á–µ—Ä–µ–∑ OwnTracks ‚Üí /api/location")
    print()
    
    print("2Ô∏è‚É£ –†–ê–°–ß–ï–¢ –†–ê–°–°–¢–û–Ø–ù–ò–Ø:")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–æ—Ä–º—É–ª–∞ –≥–∞–≤–µ—Ä—Å–∏–Ω—É—Å–∞")
    print("   ‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞: ¬±1-2 –º–µ—Ç—Ä–∞")
    print("   ‚Ä¢ –£—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫—Ä–∏–≤–∏–∑–Ω–∞ –ó–µ–º–ª–∏")
    print()
    
    print("3Ô∏è‚É£ –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê:")
    print("   ‚Ä¢ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ ‚â§ 100–º ‚Üí üü¢ –í–û–î–ò–¢–ï–õ–¨ –û–ñ–ò–î–ê–ï–¢")
    print("   ‚Ä¢ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ > 100–º ‚Üí üü° –í –ü–£–¢–ò")
    print()
    
    print("4Ô∏è‚É£ –°–û–•–†–ê–ù–ï–ù–ò–ï –í –ë–ê–ó–£:")
    print("   ‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è")
    print("   ‚Ä¢ –í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è")
    print("   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ API —Ç—Ä–µ–∫–µ—Ä–∞")

def show_work_zone_details():
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—á–µ–π –∑–æ–Ω—ã"""
    print("\nüó∫Ô∏è –î–ï–¢–ê–õ–ò –†–ê–ë–û–ß–ï–ô –ó–û–ù–´:")
    print("=" * 50)
    
    print(f"üìç –¶–ï–ù–¢–† –ó–û–ù–´:")
    print(f"   –®–∏—Ä–æ—Ç–∞:  55.676803")
    print(f"   –î–æ–ª–≥–æ—Ç–∞: 37.523510")
    print()
    
    print(f"üìè –†–ê–î–ò–£–° –ó–û–ù–´:")
    print(f"   100 –º–µ—Ç—Ä–æ–≤ (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è)")
    print()
    
    print(f"üéØ –ü–õ–û–©–ê–î–¨ –ó–û–ù–´:")
    area = math.pi * 100 * 100  # œÄ * r¬≤
    print(f"   {area:,.0f} –º¬≤ ‚âà {area/10000:.1f} –≥–µ–∫—Ç–∞—Ä–∞")
    print()
    
    print(f"üìê –î–ò–ê–ú–ï–¢–† –ó–û–ù–´:")
    print(f"   200 –º–µ—Ç—Ä–æ–≤ (–æ—Ç –∫—Ä–∞—è –¥–æ –∫—Ä–∞—è)")
    print()
    
    print(f"üö∂‚Äç‚ôÇÔ∏è –í–†–ï–ú–Ø –ü–ï–®–ö–û–ú:")
    print(f"   ~2-3 –º–∏–Ω—É—Ç—ã –ø–µ—à–∫–æ–º –æ—Ç –∫—Ä–∞—è –¥–æ —Ü–µ–Ω—Ç—Ä–∞")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"""
    demo_status_examples()
    explain_status_logic()
    show_work_zone_details()
    
    print("\nüí° –í–ê–ñ–ù–´–ï –ú–û–ú–ï–ù–¢–´:")
    print("=" * 50)
    print("‚Ä¢ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç")
    print("‚Ä¢ GPS —Ç–æ—á–Ω–æ—Å—Ç—å –≤–ª–∏—è–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞")
    print("‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å OwnTracks –Ω–∞ –≤—ã—Å–æ–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å")
    print("‚Ä¢ –†–∞–¥–∏—É—Å 100–º —É—á–∏—Ç—ã–≤–∞–µ—Ç –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å GPS (¬±3-5–º)")
    print()
    
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê –ó–û–ù–´:")
    print("‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
    print("‚Ä¢ –†–∞–¥–∏—É—Å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100–º)")
    print("‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–¥–∏—É—Å: 50-200–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–∫—Ç–∞")

if __name__ == "__main__":
    main() 