#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
"""

import requests
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import config

def check_bot_info():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ")
    print("=" * 40)
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/getMe"
    
    try:
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                bot = result['result']
                print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot.get('username', '–ù–µ—Ç')}")
                print(f"üìã ID: {bot.get('id', '–ù–µ—Ç')}")
                print(f"üìã –ò–º—è: {bot.get('first_name', '–ù–µ—Ç')}")
                print(f"üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç inline: {bot.get('can_join_groups', False)}")
                print(f"üìã –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –≥—Ä—É–ø–ø–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {bot.get('can_read_all_group_messages', False)}")
                return True
            else:
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"‚ùå HTTP {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_webhook():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook"""
    print(f"\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    print("=" * 40)
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/getWebhookInfo"
    
    try:
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                webhook = result['result']
                print(f"üìã URL: {webhook.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                print(f"üìã –û–∂–∏–¥–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook.get('pending_update_count', 0)}")
                print(f"üìã –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {webhook.get('last_error_message', '–ù–µ—Ç')}")
                
                if webhook.get('url'):
                    print("‚ö†Ô∏è Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —ç—Ç–æ –º–æ–∂–µ—Ç –º–µ—à–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
                    return True
                else:
                    print("‚úÖ Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç polling")
                    return False
            else:
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"‚ùå HTTP {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def delete_webhook():
    """–£–¥–∞–ª—è–µ—Ç webhook –µ—Å–ª–∏ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"""
    print(f"\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ webhook (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
    print("=" * 40)
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/deleteWebhook"
    
    try:
        response = requests.post(url, timeout=10)
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
                return True
            else:
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return False
        else:
            print(f"‚ùå HTTP {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_direct_message():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print(f"\nüì§ –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")
    print("=" * 40)
    
    # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
    test_contacts = [
        "@alexrashkin",
        "+79110930539"
    ]
    
    for contact in test_contacts:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {contact}")
        
        url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/sendMessage"
        data = {
            'chat_id': contact,
            'text': 'üîß –¢–µ—Å—Ç —Å–≤—è–∑–∏ - –µ—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–≤—è–∑—å —Ä–∞–±–æ—Ç–∞–µ—Ç!'
        }
        
        try:
            response = requests.post(url, json=data, timeout=10)
            print(f"üì° HTTP {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                    return contact
                else:
                    error_msg = result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                    print(f"‚ùå API –æ—à–∏–±–∫–∞: {error_msg}")
            elif response.status_code == 400:
                print("‚ùå HTTP 400 - Bad Request")
                try:
                    error_data = response.json()
                    error_msg = error_data.get('description', '')
                    print(f"üìã –û—à–∏–±–∫–∞: {error_msg}")
                except:
                    print(f"üìã –¢–µ–∫—Å—Ç: {response.text}")
            else:
                print(f"‚ùå HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return None

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    if not check_bot_info():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    has_webhook = check_webhook()
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å webhook, —É–¥–∞–ª—è–µ–º –µ–≥–æ
    if has_webhook:
        delete_webhook()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
    working_contact = test_direct_message()
    
    print("\n" + "=" * 60)
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    
    if working_contact:
        print(f"‚úÖ –°–≤—è–∑—å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º: {working_contact}")
        print("üí° –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    else:
        print("‚ùå –°–≤—è–∑—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–∏—Å–∞–ª –±–æ—Ç—É /start")
        print("   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å Telegram API")
        
        print("\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start —Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≤ Telegram")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π username")

if __name__ == "__main__":
    main() 