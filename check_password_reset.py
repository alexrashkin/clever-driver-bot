#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
current_dir = os.path.dirname(os.path.abspath(__file__))
web_dir = os.path.join(current_dir, 'web')

sys.path.insert(0, current_dir)
sys.path.insert(0, web_dir)

def check_users_emails():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º email –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    try:
        from bot.database import Database
        
        db = Database()
        users = db.get_all_users()
        
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
        for user in users:
            user_id = user.get('id')
            login = user.get('login')
            email = user.get('email')
            role = user.get('role')
            print(f"  ID: {user_id}, Login: {login}, Email: {email or '–ù–ï–¢'}, Role: {role}")
            
            if not email:
                print(f"    ‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login} –ù–ï–¢ email!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_password_reset():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è...")
    
    try:
        from bot.database import Database
        
        db = Database()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è receiver (—É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å email)
        login = "receiver"
        print(f"üìß –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {login}")
        
        success, result = db.create_password_reset_code(login)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {success}, {result}")
        
        if success:
            print("‚úÖ –ö–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

def add_email_to_users():
    """–î–æ–±–∞–≤–ª—è–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ–≥–æ –Ω–µ—Ç"""
    print("\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
    
    try:
        from bot.database import Database
        
        db = Database()
        users = db.get_all_users()
        
        for user in users:
            login = user.get('login')
            email = user.get('email')
            
            if not email:
                print(f"üìß –î–æ–±–∞–≤–ª—è–µ–º email –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {login}")
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π email
                test_email = f"{login}@example.com"
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                conn = db.get_connection()
                cursor = conn.cursor()
                cursor.execute('UPDATE users SET email = ? WHERE login = ?', (test_email, login))
                conn.commit()
                conn.close()
                
                print(f"  ‚úÖ Email –¥–æ–±–∞–≤–ª–µ–Ω: {test_email}")
        
        print("‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ç–µ–ø–µ—Ä—å –∏–º–µ—é—Ç email")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ email: {e}")

def verify_fix():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"""
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    try:
        from bot.database import Database
        
        db = Database()
        users = db.get_all_users()
        
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ({len(users)}):")
        for user in users:
            user_id = user.get('id')
            login = user.get('login')
            email = user.get('email')
            role = user.get('role')
            print(f"  ID: {user_id}, Login: {login}, Email: {email or '–ù–ï–¢'}, Role: {role}")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        for user in users:
            login = user.get('login')
            email = user.get('email')
            
            if email:
                success, result = db.create_password_reset_code(login)
                print(f"  {login}: {success}, {result}")
            else:
                print(f"  {login}: ‚ùå –ù–µ—Ç email")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    check_users_emails()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    test_password_reset()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ email
    print("\n" + "=" * 60)
    print("–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ–≥–æ –Ω–µ—Ç? (y/n): ", end="")
    
    try:
        response = input().lower().strip()
        if response in ['y', 'yes', '–¥–∞', '–¥']:
            add_email_to_users()
            verify_fix()
        else:
            print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ email –æ—Ç–º–µ–Ω–µ–Ω–æ")
    except KeyboardInterrupt:
        print("\n–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 