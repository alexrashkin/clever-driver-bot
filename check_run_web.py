#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ run_web.py –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
"""

import os
import subprocess

def check_run_web_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª run_web.py"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ run_web.py...")
    
    possible_paths = [
        "run_web.py",
        "/root/clever-driver-bot/run_web.py",
        "web/run_web.py"
    ]
    
    for path in possible_paths:
        if os.path.exists(path):
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {path}")
            try:
                with open(path, 'r', encoding='utf-8') as f:
                    content = f.read()
                print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ {path}:")
                print("=" * 50)
                print(content)
                print("=" * 50)
                return path
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {path}: {e}")
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
    
    return None

def check_web_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ systemd
        result = subprocess.run(['journalctl', '-u', 'driver-web', '-n', '20', '--no-pager'], 
                              capture_output=True, text=True)
        print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ systemd:")
        print(result.stdout)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤
        log_files = [
            "web.log",
            "driver-bot.log",
            "web/driver-bot.log",
            "/root/clever-driver-bot/web.log",
            "/root/clever-driver-bot/driver-bot.log"
        ]
        
        for log_file in log_files:
            if os.path.exists(log_file):
                print(f"\nüìÑ –õ–æ–≥–∏ –∏–∑ —Ñ–∞–π–ª–∞ {log_file}:")
                try:
                    with open(log_file, 'r', encoding='utf-8') as f:
                        lines = f.readlines()
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫
                        for line in lines[-20:]:
                            print(line.rstrip())
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤ {log_file}: {e}")
                break
        else:
            print("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–æ–≥–æ–≤: {e}")

def check_database_path():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        result = subprocess.run(['env'], capture_output=True, text=True)
        env_vars = result.stdout
        
        if 'DATABASE_URL' in env_vars:
            print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DATABASE_URL –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏")
            for line in env_vars.split('\n'):
                if 'DATABASE_URL' in line:
                    print(f"  {line}")
        else:
            print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ –ë–î
        possible_paths = [
            "driver.db",
            "bot/driver.db",
            "web/driver.db",
            "/root/clever-driver-bot/driver.db",
            "/root/clever-driver-bot/bot/driver.db",
            "/root/clever-driver-bot/web/driver.db"
        ]
        
        print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        for path in possible_paths:
            if os.path.exists(path):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {path}")
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∏ –≤—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
                stat = os.stat(path)
                print(f"  –†–∞–∑–º–µ—Ä: {stat.st_size} –±–∞–π—Ç")
                print(f"  –ò–∑–º–µ–Ω–µ–Ω: {stat.st_mtime}")
            else:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {path}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}")

def test_web_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—á–∞–µ—Ç –ª–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        result = subprocess.run(['curl', '-s', 'http://localhost:5000'], 
                              capture_output=True, text=True, timeout=5)
        
        if result.returncode == 0:
            print("‚úÖ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:5000")
            print(f"üìÑ –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞:")
            print(result.stdout[:200])
        else:
            print("‚ùå –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:5000")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

def restart_with_logs():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏"""
    print("\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏...")
    
    try:
        print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...")
        result = subprocess.run(['systemctl', 'stop', 'driver-web'], 
                              capture_output=True, text=True)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.returncode}")
        
        import time
        time.sleep(3)
        
        print("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...")
        result = subprocess.run(['systemctl', 'start', 'driver-web'], 
                              capture_output=True, text=True)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—É—Å–∫–∞: {result.returncode}")
        
        time.sleep(5)
        
        print("üìã –°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:")
        result = subprocess.run(['systemctl', 'status', 'driver-web'], 
                              capture_output=True, text=True)
        print(result.stdout)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: {e}")

if __name__ == "__main__":
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ run_web.py –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª run_web.py
    run_web_path = check_run_web_file()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    check_web_logs()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    check_database_path()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    test_web_connection()
    
    print("\n" + "=" * 60)
    print("–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏? (y/n): ", end="")
    
    try:
        response = input().lower().strip()
        if response in ['y', 'yes', '–¥–∞', '–¥']:
            restart_with_logs()
        else:
            print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω")
    except KeyboardInterrupt:
        print("\n–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    print("\nüéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 