#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞ cleverdriver.ru
"""

import requests
import urllib3
from datetime import datetime

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

BASE_URL = "https://cleverdriver.ru"

def log(message):
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {message}")

def quick_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    log("üöÄ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    try:
        response = requests.get(BASE_URL, verify=False, timeout=10)
        if response.status_code == 200:
            log("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            log(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return
    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å—Ç–∞—Ç—É—Å–∞
    try:
        response = requests.get(f"{BASE_URL}/api/status", verify=False, timeout=10)
        if response.status_code == 200:
            data = response.json()
            tracking = data.get('tracking', False)
            log(f"‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: {'üü¢ –í–ö–õ' if tracking else 'üî¥ –í–´–ö–õ'}")
        else:
            log(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ API: {e}")
    
    # 3. –¢–µ—Å—Ç –≥–µ–æ–∑–æ–Ω—ã
    try:
        response = requests.post(
            f"{BASE_URL}/api/location",
            json={"latitude": 55.676803, "longitude": 37.52351},
            headers={"Content-Type": "application/json"},
            verify=False,
            timeout=15
        )
        if response.status_code == 200:
            data = response.json()
            is_at_work = data.get('is_at_work', False)
            distance = data.get('distance', 0)
            log(f"‚úÖ –ì–µ–æ–∑–æ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç: is_at_work={is_at_work}, distance={distance:.1f}–º")
        else:
            log(f"‚ùå –ì–µ–æ–∑–æ–Ω—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç: {response.status_code}")
    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–æ–∑–æ–Ω: {e}")
    
    log("üèÅ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    quick_check() 