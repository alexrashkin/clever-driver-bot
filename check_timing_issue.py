#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–∞–π–º–∏–Ω–≥–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –æ–±—ä—è—Å–Ω—è–µ—Ç –ø–æ—á–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç
"""

import os
import time
import requests
import urllib3
from datetime import datetime, timedelta

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def log(message, level="INFO"):
    timestamp = datetime.now().strftime("%H:%M:%S.%f")[:-3]
    status_icon = {
        "INFO": "üìù",
        "SUCCESS": "‚úÖ", 
        "ERROR": "‚ùå",
        "WARNING": "‚ö†Ô∏è",
        "CRITICAL": "üö®",
        "TIMING": "üïê",
        "SOLUTION": "üí°"
    }.get(level, "üìù")
    print(f"[{timestamp}] {status_icon} {level}: {message}")

def check_local_timing_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ç–∞–π–º–∏–Ω–≥–∞"""
    log("üîç –ü–†–û–í–ï–†–ö–ê –õ–û–ö–ê–õ–¨–ù–´–• –§–ê–ô–õ–û–í –¢–ê–ô–ú–ò–ù–ì–ê", "TIMING")
    log("=" * 60)
    
    files_to_check = [
        "bot/last_checked_id.txt",
        "bot/last_checked_time.txt"
    ]
    
    for file_path in files_to_check:
        if os.path.exists(file_path):
            try:
                with open(file_path, 'r') as f:
                    content = f.read().strip()
                
                log(f"üìÑ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {file_path}")
                
                if "time" in file_path:
                    # –≠—Ç–æ —Ñ–∞–π–ª –≤—Ä–µ–º–µ–Ω–∏
                    try:
                        timestamp = float(content)
                        time_obj = datetime.fromtimestamp(timestamp)
                        current_time = datetime.now()
                        time_diff = current_time - time_obj
                        
                        log(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {time_obj.strftime('%Y-%m-%d %H:%M:%S')}")
                        log(f"   ‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time.strftime('%Y-%m-%d %H:%M:%S')}")
                        log(f"   üïê –ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏: {time_diff}")
                        
                        minutes_passed = time_diff.total_seconds() / 60
                        log(f"   üìä –ü—Ä–æ—à–ª–æ –º–∏–Ω—É—Ç: {minutes_passed:.1f}")
                        
                        if minutes_passed < 60:
                            remaining_minutes = 60 - minutes_passed
                            log(f"   ‚ö†Ô∏è –ë–õ–û–ö–ò–†–û–í–ö–ê –ê–ö–¢–ò–í–ù–ê! –û—Å—Ç–∞–ª–æ—Å—å –∂–¥–∞—Ç—å: {remaining_minutes:.1f} –º–∏–Ω—É—Ç", "WARNING")
                        else:
                            log(f"   ‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–Ω—è—Ç–∞, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω—ã", "SUCCESS")
                            
                    except ValueError:
                        log(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: {content}", "ERROR")
                else:
                    # –≠—Ç–æ —Ñ–∞–π–ª ID
                    log(f"   üÜî –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π ID: {content}")
                    
            except Exception as e:
                log(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}", "ERROR")
        else:
            log(f"üìÑ –§–∞–π–ª –ù–ï –Ω–∞–π–¥–µ–Ω: {file_path} (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)")

def check_server_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    log("\nüåê –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –ó–ê–ü–ò–°–ï–ô –ù–ê –°–ï–†–í–ï–†–ï", "TIMING")
    log("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞
        response = requests.get("https://cleverdriver.ru/api/history", verify=False, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            history = data.get('history', [])
            
            if len(history) >= 2:
                log(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(history)}")
                log(f"\nüìã –ü–û–°–õ–ï–î–ù–ò–ï 5 –ó–ê–ü–ò–°–ï–ô:")
                
                for i, record in enumerate(history[:5]):
                    at_work = "üè¢ –ù–ê –†–ê–ë–û–¢–ï" if record['is_at_work'] else "üöó –í –ü–£–¢–ò"
                    timestamp = record['timestamp']
                    distance = record.get('distance', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    
                    log(f"   {i+1}. {timestamp} | {at_work} | {distance}–º")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã
                log(f"\nüîç –ê–ù–ê–õ–ò–ó –ü–ï–†–ï–•–û–î–û–í:")
                transitions = []
                
                for i in range(len(history) - 1):
                    curr = history[i]
                    prev = history[i + 1]
                    
                    if curr['is_at_work'] != prev['is_at_work']:
                        transition_type = "–í–•–û–î –í –ó–û–ù–£" if curr['is_at_work'] else "–í–´–•–û–î –ò–ó –ó–û–ù–´"
                        transitions.append({
                            'type': transition_type,
                            'time': curr['timestamp'],
                            'new_status': curr['is_at_work']
                        })
                
                if transitions:
                    log(f"   üì¢ –ù–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: {len(transitions)}")
                    for i, transition in enumerate(transitions[:3]):
                        log(f"   {i+1}. {transition['type']} –≤ {transition['time']}")
                else:
                    log(f"   üìù –ü–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É –∑–æ–Ω–∞–º–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
                    
            else:
                log(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {len(history)}", "ERROR")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: HTTP {response.status_code}", "ERROR")
            
    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}", "ERROR")

def explain_timing_logic():
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ç–∞–π–º–∏–Ω–≥–æ–≤"""
    log(f"\nüß† –õ–û–ì–ò–ö–ê –°–ò–°–¢–ï–ú–´ –¢–ê–ô–ú–ò–ù–ì–û–í", "TIMING")
    log("=" * 60)
    
    log("üìö –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞:")
    log("   1. –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ '–ù–ï –ù–ê –†–ê–ë–û–¢–ï' ‚Üí '–ù–ê –†–ê–ë–û–¢–ï' —Å–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '–ü—Ä–∏–µ—Ö–∞–ª–∏'")
    log("   2. –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ '–ù–ê –†–ê–ë–û–¢–ï' ‚Üí '–ù–ï –ù–ê –†–ê–ë–û–¢–ï' —Å–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '–í—ã–µ—Ö–∞–ª–∏'")
    log("   3. –ù–û! –ú–µ–∂–¥—É –ª—é–±—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –º–∏–Ω–∏–º—É–º 60 –º–∏–Ω—É—Ç")
    log("   4. –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ bot/last_checked_time.txt")
    log("   5. –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 60 –º–∏–Ω—É—Ç - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è")
    log("")
    log("üïê –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:")
    log("   ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: 60 –º–∏–Ω—É—Ç (3600 —Å–µ–∫—É–Ω–¥)")
    log("   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–∞–∑—ã: –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥")
    log("   ‚Ä¢ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–æ–≤: 15 —Å–µ–∫—É–Ω–¥")

def provide_solutions():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π"""
    log(f"\nüí° –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´", "SOLUTION")
    log("=" * 60)
    
    log("üîß –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:")
    log("   1. –ñ–î–ê–¢–¨ - –¥–æ–∂–¥–∞—Ç—å—Å—è –∏—Å—Ç–µ—á–µ–Ω–∏—è 60 –º–∏–Ω—É—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    log("   2. –°–ë–†–û–° - —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª bot/last_checked_time.txt –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞")
    log("   3. –ò–ó–ú–ï–ù–ò–¢–¨ –ö–û–î - —É–º–µ–Ω—å—à–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å 60 –¥–æ 5 –º–∏–Ω—É—Ç –≤ –∫–æ–¥–µ")
    log("   4. –¢–ï–°–¢ - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
    log("")
    log("‚ö†Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    log("   –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª—É—á—à–µ –≤—Ä–µ–º–µ–Ω–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª")
    log("   —Å 60 –º–∏–Ω—É—Ç –¥–æ 5 –º–∏–Ω—É—Ç –≤ —Ñ–∞–π–ª–∞—Ö bot/main.py –∏ bot/handlers.py")

def offer_timing_reset():
    """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–∏–Ω–≥–æ–≤"""
    log(f"\nüîÑ –°–ë–†–û–° –¢–ê–ô–ú–ò–ù–ì–û–í", "SOLUTION")
    log("=" * 60)
    
    timing_file = "bot/last_checked_time.txt"
    
    if os.path.exists(timing_file):
        response = input("‚ùì –•–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–∏–Ω–≥–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π? (y/n): ").lower().strip()
        
        if response in ['y', 'yes', '–¥–∞']:
            try:
                os.remove(timing_file)
                log(f"‚úÖ –§–∞–π–ª {timing_file} —É–¥–∞–ª–µ–Ω - —Ç–∞–π–º–∏–Ω–≥–∏ —Å–±—Ä–æ—à–µ–Ω—ã!", "SUCCESS")
                log("üì¢ –¢–µ–ø–µ—Ä—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—Ä–∞–∑—É –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Ç–µ—Å—Ç–µ", "SUCCESS")
            except Exception as e:
                log(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}", "ERROR")
        else:
            log("‚ÑπÔ∏è –¢–∞–π–º–∏–Ω–≥–∏ –ù–ï —Å–±—Ä–æ—à–µ–Ω—ã - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π", "INFO")
    else:
        log("üìù –§–∞–π–ª —Ç–∞–π–º–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–µ—Ç", "INFO")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    log("üïê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –¢–ê–ô–ú–ò–ù–ì–ê–ú–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô", "TIMING")
    log("üåê –°–µ—Ä–≤–µ—Ä: https://cleverdriver.ru")
    log("‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: " + datetime.now().strftime("%H:%M:%S"))
    log("=" * 70)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    check_local_timing_files()
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    check_server_database()
    
    # 3. –û–±—ä—è—Å–Ω—è–µ–º –ª–æ–≥–∏–∫—É
    explain_timing_logic()
    
    # 4. –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
    provide_solutions()
    
    # 5. –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–±—Ä–æ—Å
    offer_timing_reset()
    
    log(f"\nüìä –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï", "TIMING")
    log("=" * 70)
    log("üîç –ï—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    log("   1. –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ bot/last_checked_time.txt")
    log("   2. –ü—Ä–æ—à–ª–æ –ª–∏ 60 –º–∏–Ω—É—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    log("   3. –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –≤—ã –≤ Telegram –±–æ—Ç–µ")
    log("   4. –í–∫–ª—é—á–µ–Ω–æ –ª–∏ –∞–≤—Ç–æ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ")
    log("")
    log("üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª")
    log("   –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–∏–Ω–≥–∏ —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è")

if __name__ == "__main__":
    main() 