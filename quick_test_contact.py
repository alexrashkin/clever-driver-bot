#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
"""

import requests
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import config

def quick_test(contact):
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    print(f"üîç –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Ç–∞–∫—Ç–∞: {contact}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º chat_id
    if contact.startswith('@'):
        username = contact[1:]
        chat_id = f"@{username}"
    elif contact.startswith('+'):
        chat_id = contact
    else:
        chat_id = f"@{contact}"
    
    print(f"üìã Chat ID: {chat_id}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º sendMessage
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/sendMessage"
    data = {
        'chat_id': chat_id,
        'text': 'üîß –¢–µ—Å—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞'
    }
    
    try:
        response = requests.post(url, json=data, timeout=10)
        print(f"üì° HTTP {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                error_msg = result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {error_msg}")
                return False
        elif response.status_code == 400:
            print("‚ùå HTTP 400 - Bad Request")
            try:
                error_data = response.json()
                error_msg = error_data.get('description', '')
                print(f"üìã –û—à–∏–±–∫–∞: {error_msg}")
            except:
                print(f"üìã –¢–µ–∫—Å—Ç: {response.text}")
            return False
        else:
            print(f"‚ùå HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Ç–∞–∫—Ç–∞")
    print("=" * 30)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
    contact = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç: ").strip()
    
    if not contact:
        print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É–∫–∞–∑–∞–Ω")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    success = quick_test(contact)
    
    if success:
        print("\n‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–∏–≤—è–∑–∫–∞ –¥–æ–ª–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å.")
    else:
        print("\n‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å username/–Ω–æ–º–µ—Ä–∞")
        print("2. –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram")
        print("3. –ù–∞–ª–∏—á–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º (/start)")

if __name__ == "__main__":
    main() 