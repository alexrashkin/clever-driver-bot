#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è systemd —Å–µ—Ä–≤–∏—Å–æ–º
"""
import sys
import os

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª
def log_to_file(message):
    with open('/tmp/run_web_debug.log', 'a', encoding='utf-8') as f:
        f.write(f"{message}\n")
    print(message)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ –ü–ï–†–ï–î –≤—Å–µ–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏
def load_env_file():
    env_file = os.path.join(os.path.dirname(__file__), '.env')
    log_to_file(f"üîç RUN_WEB: –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª: {env_file}")
    if os.path.exists(env_file):
        log_to_file("‚úÖ RUN_WEB: .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ...")
        with open(env_file, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key] = value
                    log_to_file(f"üìù RUN_WEB: –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: {key}")
        log_to_file(f"üìß RUN_WEB: EMAIL_ENABLED = {os.environ.get('EMAIL_ENABLED', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
    else:
        log_to_file("‚ùå RUN_WEB: .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –ü–ï–†–ï–î –≤—Å–µ–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏
load_env_file()

import asyncio

# –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å nest_asyncio, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
try:
    import nest_asyncio
    nest_asyncio.apply()
except ImportError:
    log_to_file("‚ö†Ô∏è nest_asyncio –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

if __name__ == "__main__":
    try:
        log_to_file("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ run_web.py...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from web.app import app
        from config.settings import config
        
        app.run(
            host=config.WEB_HOST,
            port=config.WEB_PORT,
            debug=False
        )
    except KeyboardInterrupt:
        log_to_file("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    except Exception as e:
        log_to_file(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1) 