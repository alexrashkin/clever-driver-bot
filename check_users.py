#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'bot'))

def check_users():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = sqlite3.connect('driver.db')
        cursor = conn.cursor()
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(users)")
        columns = cursor.fetchall()
        print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:")
        for col in columns:
            print(f"   {col[1]} ({col[2]})")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∫–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å—Ç—å
        column_names = [col[1] for col in columns]
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {', '.join(column_names)}")
        print()
        
        if 'role' in column_names:
            # –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å role
            if 'login' in column_names:
                cursor.execute("""
                    SELECT id, telegram_id, login, first_name, last_name, role, auth_type, created_at 
                    FROM users 
                    ORDER BY id
                """)
            else:
                cursor.execute("""
                    SELECT id, telegram_id, username, first_name, last_name, role, created_at 
                    FROM users 
                    ORDER BY id
                """)
        else:
            # –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–µ–∑ role
            cursor.execute("""
                SELECT id, telegram_id, username, first_name, last_name, recipient_telegram_id, created_at 
                FROM users 
                ORDER BY id
            """)
        
        users = cursor.fetchall()
        
        if not users:
            print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            return
        
        print("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:")
        print("=" * 80)
        
        if 'role' in column_names:
            if 'login' in column_names:
                print(f"{'ID':<4} {'Telegram ID':<12} {'–õ–æ–≥–∏–Ω':<15} {'–ò–º—è':<20} {'–†–æ–ª—å':<12} {'–¢–∏–ø':<10}")
                print("=" * 80)
                
                for user in users:
                    user_id, telegram_id, login, first_name, last_name, role, auth_type, created_at = user
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
                    telegram_id_str = str(telegram_id) if telegram_id else '–ù–µ—Ç'
                    login_str = login or '–ù–µ—Ç'
                    name_str = f"{first_name or ''} {last_name or ''}".strip() or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                    role_str = role or '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'
                    auth_type_str = auth_type or 'telegram'
                    
                    print(f"{user_id:<4} {telegram_id_str:<12} {login_str:<15} {name_str:<20} {role_str:<12} {auth_type_str:<10}")
            else:
                print(f"{'ID':<4} {'Telegram ID':<12} {'Username':<15} {'–ò–º—è':<20} {'–†–æ–ª—å':<12}")
                print("=" * 80)
                
                for user in users:
                    user_id, telegram_id, username, first_name, last_name, role, created_at = user
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
                    telegram_id_str = str(telegram_id) if telegram_id else '–ù–µ—Ç'
                    username_str = username or '–ù–µ—Ç'
                    name_str = f"{first_name or ''} {last_name or ''}".strip() or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                    role_str = role or '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'
                    
                    print(f"{user_id:<4} {telegram_id_str:<12} {username_str:<15} {name_str:<20} {role_str:<12}")
        else:
            # –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
            print(f"{'ID':<4} {'Telegram ID':<12} {'Username':<15} {'–ò–º—è':<20} {'–ü–æ–ª—É—á–∞—Ç–µ–ª—å ID':<12}")
            print("=" * 80)
            
            for user in users:
                user_id, telegram_id, username, first_name, last_name, recipient_telegram_id, created_at = user
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
                telegram_id_str = str(telegram_id) if telegram_id else '–ù–µ—Ç'
                username_str = username or '–ù–µ—Ç'
                name_str = f"{first_name or ''} {last_name or ''}".strip() or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                recipient_str = str(recipient_telegram_id) if recipient_telegram_id else '–ù–µ—Ç'
                
                print(f"{user_id:<4} {telegram_id_str:<12} {username_str:<15} {name_str:<20} {recipient_str:<12}")
        
        print("=" * 80)
        
        if 'role' in column_names:
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            admin_count = sum(1 for user in users if user[5] == 'admin')
            driver_count = sum(1 for user in users if user[5] == 'driver')
            recipient_count = sum(1 for user in users if user[5] == 'recipient')
            no_role_count = sum(1 for user in users if not user[5])
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {admin_count}")
            print(f"üöó –í–æ–¥–∏—Ç–µ–ª–µ–π: {driver_count}")
            print(f"üì± –ü–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {recipient_count}")
            print(f"‚ùì –ë–µ–∑ —Ä–æ–ª–∏: {no_role_count}")
            print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        else:
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            with_recipient = sum(1 for user in users if user[5])
            without_recipient = sum(1 for user in users if not user[5])
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (—Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞):")
            print(f"üë§ –í–ª–∞–¥–µ–ª—å—Ü—ã —Å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º: {with_recipient}")
            print(f"üë§ –í–ª–∞–¥–µ–ª—å—Ü—ã –±–µ–∑ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {without_recipient}")
            print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–µ–∑ —Ä–æ–ª–µ–π!")
            print(f"   –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ä–æ–ª–µ–π.")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã Telegram ID
        telegram_ids = [user[1] for user in users if user[1]]
        duplicates = [tid for tid in set(telegram_ids) if telegram_ids.count(tid) > 1]
        
        if duplicates:
            print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã Telegram ID:")
            for dup_id in duplicates:
                print(f"   Telegram ID {dup_id} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:")
                for user in users:
                    if user[1] == dup_id:
                        if 'role' in column_names:
                            if 'login' in column_names:
                                print(f"     - ID {user[0]}: {user[3] or user[2] or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (—Ä–æ–ª—å: {user[5] or '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'})")
                            else:
                                print(f"     - ID {user[0]}: {user[3] or user[2] or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (—Ä–æ–ª—å: {user[5] or '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'})")
                        else:
                            print(f"     - ID {user[0]}: {user[3] or user[2] or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (–ø–æ–ª—É—á–∞—Ç–µ–ª—å: {user[5] or '–ù–µ—Ç'})")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_users() 