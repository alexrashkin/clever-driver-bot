#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –±–æ—Ç–∞ –∏ –ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import requests
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import config

def check_bot_info():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    print("ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
    print("=" * 30)
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/getMe"
    
    try:
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data['result']
                print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info.get('username')}")
                print(f"üìã ID –±–æ—Ç–∞: {bot_info.get('id')}")
                print(f"üìã –ò–º—è: {bot_info.get('first_name')}")
                print(f"üìã Can join groups: {bot_info.get('can_join_groups', False)}")
                print(f"üìã Can read all group messages: {bot_info.get('can_read_all_group_messages', False)}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description')}")
        else:
            print(f"‚ùå HTTP {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def get_all_updates():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    print(f"\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/getUpdates"
    params = {"limit": 100, "offset": -1}
    
    try:
        response = requests.get(url, params=params, timeout=10)
        print(f"üì° GET /getUpdates: HTTP {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                updates = data.get('result', [])
                print(f"üìã –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                
                if len(updates) == 0:
                    print("‚ùå –ò—Å—Ç–æ—Ä–∏—è –±–æ—Ç–∞ –ø—É—Å—Ç–∞")
                    print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                    print("   - –ë–æ—Ç –Ω–æ–≤—ã–π –∏ –Ω–∏–∫—Ç–æ –Ω–µ –ø–∏—Å–∞–ª")
                    print("   - –ò—Å—Ç–æ—Ä–∏—è –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞")
                    print("   - –í—ã –ø–∏—Å–∞–ª–∏ —Å –¥—Ä—É–≥–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
                    return []
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                users = {}
                for update in updates:
                    if 'message' in update:
                        message = update['message']
                        user = message.get('from', {})
                        user_id = user.get('id')
                        
                        if user_id not in users:
                            users[user_id] = {
                                'id': user_id,
                                'username': user.get('username'),
                                'first_name': user.get('first_name'),
                                'last_name': user.get('last_name'),
                                'messages': []
                            }
                        
                        users[user_id]['messages'].append({
                            'text': message.get('text', ''),
                            'date': message.get('date', 0)
                        })
                
                print(f"\nüë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
                for user_id, user_info in users.items():
                    print(f"\nüì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}:")
                    print(f"   Username: @{user_info['username'] or '–ù–µ—Ç'}")
                    print(f"   –ò–º—è: {user_info['first_name'] or '–ù–µ—Ç'}")
                    print(f"   –§–∞–º–∏–ª–∏—è: {user_info['last_name'] or '–ù–µ—Ç'}")
                    print(f"   –°–æ–æ–±—â–µ–Ω–∏–π: {len(user_info['messages'])}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    recent_messages = user_info['messages'][-3:]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                    for msg in recent_messages:
                        print(f"   - {msg['text']}")
                
                return list(users.keys())
            else:
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {data.get('description')}")
        else:
            print(f"‚ùå HTTP {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return []

def test_send_to_user(user_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    print(f"\nüì§ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    
    url = f"https://api.telegram.org/bot{config.TELEGRAM_TOKEN}/sendMessage"
    data = {
        'chat_id': user_id,
        'text': 'üîß –¢–µ—Å—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏'
    }
    
    try:
        response = requests.post(url, json=data, timeout=10)
        print(f"üì° HTTP {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                error_msg = result.get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {error_msg}")
        else:
            print(f"‚ùå HTTP {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –±–æ—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    if not check_bot_info():
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_ids = get_all_updates()
    
    if user_ids:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
        for user_id in user_ids:
            test_send_to_user(user_id)
    
    print("\n" + "=" * 60)
    print("üìã –í—ã–≤–æ–¥—ã:")
    if len(user_ids) == 0:
        print("‚ùå –í –∏—Å—Ç–æ—Ä–∏–∏ –±–æ—Ç–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("üí° –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ:")
        print("   1. –í—ã –ø–∏—Å–∞–ª–∏ –±–æ—Ç—É —Å –¥—Ä—É–≥–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
        print("   2. –ò—Å—Ç–æ—Ä–∏—è –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞")
        print("   3. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ Telegram –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è")
    else:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(user_ids)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É—è username –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö")
    
    print("\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å –∫–∞–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤—ã –ø–∏—Å–∞–ª–∏ –±–æ—Ç—É")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–º–µ—Ä +79110930539 –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É Telegram")
    print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å username –≤–º–µ—Å—Ç–æ –Ω–æ–º–µ—Ä–∞")
    print("4. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /start —Å–Ω–æ–≤–∞ —Å –Ω—É–∂–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")

if __name__ == "__main__":
    main() 