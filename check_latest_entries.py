#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
from datetime import datetime, timedelta

def check_latest_entries():
    print("üìä –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –ó–ê–ü–ò–°–ï–ô –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('driver.db')
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
        cursor.execute("""
            SELECT id, latitude, longitude, is_at_work, timestamp, 
                   distance
            FROM locations 
            ORDER BY timestamp DESC 
            LIMIT 10
        """)
        
        records = cursor.fetchall()
        
        if not records:
            print("‚ùå –ó–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
            
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(records)}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏
        latest_time = datetime.fromisoformat(records[0][4])
        current_time = datetime.now()
        time_diff = current_time - latest_time
        
        print(f"üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: {latest_time.strftime('%H:%M:%S')}")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –Ω–∞–∑–∞–¥: {time_diff.total_seconds():.0f} —Å–µ–∫—É–Ω–¥")
        print()
        
        print("üìã –ü–û–°–õ–ï–î–ù–ò–ï –ó–ê–ü–ò–°–ò:")
        print("-" * 60)
        
        for record in records:
            record_id, lat, lon, is_at_work, timestamp, distance = record
            created_time = datetime.fromisoformat(timestamp)
            
            status = "‚úÖ –ù–ê –†–ê–ë–û–¢–ï" if is_at_work else "‚ùå –ù–ï –ù–ê –†–ê–ë–û–¢–ï"
            
            print(f"ID: {record_id:2d} | {created_time.strftime('%H:%M:%S')} | {status}")
            print(f"    üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat:.6f}, {lon:.6f}")
            print(f"    üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {distance:.0f}–º")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        cursor.execute("SELECT is_active FROM tracking_status ORDER BY id DESC LIMIT 1")
        tracking_result = cursor.fetchone()
        
        if tracking_result:
            tracking_enabled = tracking_result[0]
            print(f"üéØ –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï: {'üü¢ –í–ö–õ–Æ–ß–ï–ù–û' if tracking_enabled else 'üî¥ –í–´–ö–õ–Æ–ß–ï–ù–û'}")
        else:
            print("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    check_latest_entries() 