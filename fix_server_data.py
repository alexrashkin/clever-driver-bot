#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
–ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: python3 fix_server_data.py
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/opt/driver-bot')

try:
    from bot.database import db
    from config.settings import config
    from bot.utils import calculate_distance
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    sys.exit(1)

def main():
    print("üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"üìã –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"  WORK_LATITUDE: {config.WORK_LATITUDE}")
    print(f"  WORK_LONGITUDE: {config.WORK_LONGITUDE}")
    print(f"  WORK_RADIUS: {config.WORK_RADIUS}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤–æ–¥–∏—Ç–µ–ª—è
    conn = db.get_connection()
    cursor = conn.cursor()
    
    cursor.execute("""
        SELECT ul.latitude, ul.longitude, ul.is_at_work, u.role, u.id
        FROM user_locations ul 
        JOIN users u ON ul.user_id = u.id 
        WHERE u.role = 'driver' 
        ORDER BY ul.created_at DESC LIMIT 1
    """)
    driver = cursor.fetchone()
    
    if driver:
        lat, lon, is_at_work, role, user_id = driver
        distance = calculate_distance(lat, lon, config.WORK_LATITUDE, config.WORK_LONGITUDE)
        
        print(f"üöó –í–æ–¥–∏—Ç–µ–ª—å –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print(f"  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat}, {lon}")
        print(f"  is_at_work: {is_at_work}")
        print(f"  –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ä–∞–±–æ—Ç—ã: {distance:.1f}–º")
        print(f"  –í —Ä–∞–±–æ—á–µ–π –∑–æ–Ω–µ: {distance <= config.WORK_RADIUS}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–æ–¥–∏—Ç–µ–ª—è
        cursor.execute("""
            UPDATE user_locations 
            SET is_at_work = 0 
            WHERE user_id IN (SELECT id FROM users WHERE role = 'driver')
        """)
        updated_count = cursor.rowcount
        conn.commit()
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤–æ–¥–∏—Ç–µ–ª–µ–π: {updated_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("""
            SELECT ul.latitude, ul.longitude, ul.is_at_work, u.role
            FROM user_locations ul 
            JOIN users u ON ul.user_id = u.id 
            WHERE u.role = 'driver' 
            ORDER BY ul.created_at DESC LIMIT 1
        """)
        driver_after = cursor.fetchone()
        
        if driver_after:
            lat, lon, is_at_work, role = driver_after
            distance = calculate_distance(lat, lon, config.WORK_LATITUDE, config.WORK_LONGITUDE)
            
            print(f"üöó –í–æ–¥–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
            print(f"  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat}, {lon}")
            print(f"  is_at_work: {is_at_work}")
            print(f"  –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ä–∞–±–æ—Ç—ã: {distance:.1f}–º")
            print(f"  –°—Ç–∞—Ç—É—Å: {'–í –ø—É—Ç–∏' if distance > config.WORK_RADIUS else '–í–æ–¥–∏—Ç–µ–ª—å –æ–∂–∏–¥–∞–µ—Ç'}")
    else:
        print("‚ö†Ô∏è –í–æ–¥–∏—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    
    conn.close()
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 