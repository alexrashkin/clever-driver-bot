#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
"""

import requests
import subprocess

def check_web_server(url, name):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            print(f"‚úÖ {name}: {url} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå {name}: {url} - –æ—à–∏–±–∫–∞ {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå {name}: {url} - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({e})")
        return False

def check_ports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤"""
    try:
        result = subprocess.run(
            ["netstat", "-an"], 
            capture_output=True, 
            text=True, 
            timeout=10
        )
        
        ports = {
            "8080": "HTTP —Å–µ—Ä–≤–µ—Ä",
            "8443": "HTTPS —Å–µ—Ä–≤–µ—Ä"
        }
        
        for port, name in ports.items():
            if f":{port}" in result.stdout and "LISTENING" in result.stdout:
                print(f"‚úÖ {name} (–ø–æ—Ä—Ç {port}): –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è")
            else:
                print(f"‚ùå {name} (–ø–æ—Ä—Ç {port}): –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤: {e}")

def check_python_processes():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
    try:
        result = subprocess.run(
            ["tasklist"], 
            capture_output=True, 
            text=True, 
            timeout=10
        )
        
        python_count = result.stdout.count("python.exe")
        print(f"üêç Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ: {python_count}")
        
        if python_count >= 2:
            print("‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–æ—Ç–∞")
        else:
            print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Clever Driver Bot —Å–∏—Å—Ç–µ–º—ã...")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–≤
    print("\nüåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä—ã:")
    http_ok = check_web_server("http://192.168.0.104:8080", "HTTP —Å–µ—Ä–≤–µ—Ä")
    https_ok = check_web_server("https://192.168.0.104:8443", "HTTPS —Å–µ—Ä–≤–µ—Ä")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    print("\nüîå –ü–æ—Ä—Ç—ã:")
    check_ports()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    print("\n‚öôÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã:")
    check_python_processes()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("\n" + "=" * 60)
    if http_ok or https_ok:
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üì± –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram –±–æ—Ç–µ")
        print("üåê HTTP: http://192.168.0.104:8080")
        print("üîí HTTPS: https://192.168.0.104:8443")
    else:
        print("‚ùå –ù—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä:")
        print("   python simple_web_server.py")
        print("   –∏–ª–∏")
        print("   python https_simple_server.py")
    
    print("\nü§ñ –î–ª—è Telegram –±–æ—Ç–∞ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω:")
    print("   python telegram_bot_handler.py")

if __name__ == "__main__":
    main() 